#!/usr/bin/env groovy

pipeline {
    agent any
    parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
    }
    stages {
        stage('build app') {
            steps {
                echo "Hello ${params.PERSON}"

                echo "Biography: ${params.BIOGRAPHY}"

                echo "Toggle: ${params.TOGGLE}"

                echo "Choice: ${params.CHOICE}"
                script {
                     System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "")
                }
               

                sh "npm install"
            }
        }
        
        stage('lint') {
            steps{
                
                        sh "mkdir -p reports"

                        echo "Starting Lint..."

                        
                        sh "npm run standard --silent -- &> reports/lint.txt"
                        

                        echo "Lint executed!"
                    
            }
        }
        stage ('unit test') {
            steps{
                echo "no unit tests configured"
            }
        }
        
        stage('package') {
            steps {
            withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'Lambda-Jenkins', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                                sh "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION=us-east-1 aws cloudformation package " +
                                        "--template-file saml.yaml " +
                                        "--s3-bucket codedeploytestsai " +
                                        "--output-template-file post-saml.yaml "
                            }
            }   
        }
        
        stage('deploy'){
            steps{
           withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'Lambda-Jenkins', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                                sh "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION=us-east-1 aws cloudformation deploy " +
                                        "--template-file post-saml.yaml " +
                                        "--stack-name firstsamdeploy --capabilities CAPABILITY_IAM " +
                                        "--parameter-overrides \$(cat parameters.properties)"
                            }
            }
        }
    }
}
